---
import { Icon } from "astro-icon/components";

interface Props {
  id: string;
  date?: string;
  text?: string;
  author?: string;
  liked?: boolean;
}

const {
  id,
  date = "31st June, 2021",
  text = "Lorem ipsum dolor sit, amet consectetur adipisicing elit.",
  author = "Unknown",
  liked = false,
} = Astro.props;
---

<div
  is="note-card"
  class="relative block overflow-hidden rounded-xl bg-white border border-gray-100 p-4 sm:p-6 lg:p-8 shadow-lg hover:bg-yellow-50 cursor-pointer transition-all duration-200 hover:shadow-xl"
  data-note-id={id}
  data-liked={liked}
>
  <div class="flex flex-col-reverse">
    <span class="text-xs text-gray-500 sm:text-sm">{date}</span>
  </div>

  <div class="mt-3">
    <p class="text-pretty text-sm text-gray-700 sm:text-base">
      {text}
    </p>
  </div>

  <div class="mt-4 flex gap-2 sm:gap-4 justify-between items-end">
    <span
      class="text-xs sm:text-sm font-medium text-gray-600 truncate max-w-[180px]"
      >{author}</span
    >
    <Icon
      name="mdi:heart"
      class:list={[
        "transition-all duration-200 transform hover:scale-110",
        liked ? "text-red-500" : "text-gray-300",
      ]}
      size="18"
    />
  </div>
</div>

<script>
  class NoteCard extends HTMLDivElement {
    lastClick = 0;
    DOUBLE_CLICK_THRESHOLD = 300;

    constructor() {
      super();
      this.handleClick = this.handleClick.bind(this);
    }

    connectedCallback() {
      this.addEventListener("click", this.handleClick);
    }

    disconnectedCallback() {
      this.removeEventListener("click", this.handleClick);
    }

    async handleClick() {
      const currentTime = Date.now();
      const timeDiff = currentTime - this.lastClick;

      if (timeDiff < this.DOUBLE_CLICK_THRESHOLD) {
        const noteId = this.dataset.noteId;
        const isLiked = this.dataset.liked === "true";

        try {
          const response = await fetch(`/api/notes/${noteId}/like`, {
            method: "POST",
          });

          if (response.ok) {
            this.dataset.liked = (!isLiked).toString();
            const heartIcon = this.querySelector(
              '[data-astro-icon="mdi:heart"]'
            );
            heartIcon?.classList.toggle("text-gray-300");
            heartIcon?.classList.toggle("text-red-500");
          }
        } catch (error) {
          console.error("Error updating like:", error);
        }
      }

      this.lastClick = currentTime;
    }
  }

  customElements.define("note-card", NoteCard, { extends: "div" });
</script>
